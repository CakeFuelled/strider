/**
 * Strider API
 * Generic Error Handler
 */

var log = require('../lib/log.js'),
  HttpError = require('httperrors');

module.exports = function(Strider) {

  //Log all errors
  Strider.app.use(function(err, req, res, next) {
    log.error(err);
    next(err);
  });

  //Handle CSRF Errors
  Strider.app.use(function(err, req, res, next) {
    if (err.code === 'EBADCSRFTOKEN') {

      log.debug('Invalid or missing CSRF Token');
      var httpErr = new HttpError.Forbidden('Invalid or missing CSRF Token');
      res.status(httpErr.statusCode).send(httpErr);
      return;
    }

    next(err);
  });

  //Catch known errors
  Strider.app.use(function(err, req, res, next) {
    //We're assuming that HttpError.<whatever> is only generated by us
    if (err.hasOwnProperty('statusCode')) {
      res.status(err.statusCode).send(err);
      return;
    }

    next(err);
  });

  //Catch all - Any errors that get here are unknowns
  Strider.app.use(function(err, req, res, next) {
    //Return a generic error
    var httpErr = new HttpError.InternalServerError('An unexpected error occured, please contact the developers');
    res.status(httpErr.statusCode).send(httpErr);
  });
}
